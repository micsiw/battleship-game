(()=>{"use strict";const e=e=>({name:e,turn:!1,ships:["Destroyer","Destroyer","Submarine","Cruiser","Battleship","Carrier"]}),o=e=>{let o=e,c=!1;return{getHealth:()=>o,getSize:()=>e,hit:()=>{o-=1},isSunk:()=>(c=o<1,c)}},c={Carrier:o(5),Battleship:o(4),Cruiser:o(3),Submarine:o(3),Destroyer:o(2)},t=100,l=()=>{const e=[];return function(o){for(let c=0;c<o;c++){const o={occupied:null,visited:!1};e.push(o)}}(t),{board:e,placeShip:(o,l,i=function(){return Math.random()<.5}())=>{console.log(o,l);const r=c[o],n=r.getSize(),u=i;console.log(`horizontal:${u}`);const d=[0,10,20,30,40,50,60,70,80,90,100],s=[100,101,102,103,104,105,106,107,108,109];function a(){if(!0===u){for(let e=1;e<n;e++)if(d.includes(l+e))return!1;for(let o=0;o<n;o++)if(l+o>=0&&l+o<t&&null!==e[l+o].occupied)return!1}else if(!1===u){let o=0;for(let e=0;e<n;e++){if(s.includes(l+o))return!1;o+=10}o=0;for(let c=0;c<n;c++)if(l+o>=0&&l+o<t){if(null!==e[l+o].occupied)return!1;o+=10}}return!0}if(!0===u&&!0===a()){[l+n-10,l+n+10,l+n,l-11,l-1,l+9].forEach(((o,c)=>{o>=0&&o<100&&(c<3&&!d.includes(o)&&(e[o].occupied="blocked"),c>2&&!d.map((e=>e-1)).includes(o)&&(e[o].occupied="blocked"))}));for(let o=0;o<n;o++){const c=[l+o+10,l+o-10];e[l+o].occupied=r,c.forEach((o=>{o>=0&&o<100&&(e[o].occupied="blocked")}))}return!0}if(!1===u&&!0===a()){[l-9,l+10*n+1,l-11,l+10*n-1,l-10,l+10*n].forEach(((o,c)=>{o>=0&&o<100&&(c<2&&!d.includes(o)&&(e[o].occupied="blocked"),c>1&&c<4&&!d.map((e=>e-1)).includes(o)&&(e[o].occupied="blocked"),c>3&&(e[o].occupied="blocked"))}));let o=0;for(let c=0;c<n;c++){const c=[l+o+1,l+o-1];e[l+o].occupied=r,c.forEach(((o,c)=>{o>=0&&o<100&&(0!==c||d.includes(o)||(e[o].occupied="blocked"),1!==c||d.map((e=>e-1)).includes(o)||(e[o].occupied="blocked"))})),o+=10}return!0}return!1},receiveAttack:o=>{!0===e[o].visited&&console.log("Field was already used"),null!==e[o].occupied&&(console.log("Ship was striked"),e[o].occupied.hit()),e[o].visited=!0},areAllSunk:()=>{let o=!0;return e.forEach((e=>{null!==e.occupied&&"blocked"!==e.occupied&&!1===e.occupied.isSunk()&&(o=!1)})),o}}};function i(e){const o=document.querySelector(".gameboards"),c=document.createElement("div");c.style.display="grid",c.style.gridTemplateColumns=`repeat(${Math.sqrt(t)}, 1fr)`,e.board.forEach(((e,o)=>{const t=document.createElement("div");t.classList.add("field"),t.dataset.field=o,null!==e.occupied&&"blocked"!==e.occupied&&(t.style.backgroundColor="yellow"),"blocked"===e.occupied&&(t.style.backgroundColor="pink"),c.appendChild(t)})),o.appendChild(c)}function r(e,o){const c=e.ships,l=e.ships.length;for(let e=0;e<l;e++){const l=c.pop(),i=Math.floor(Math.random()*t),r=o.placeShip(l,i);!1===r&&(c.push(l),e-=1),console.log(`ship allowed:${r}`)}}!function(){const o=e("Player"),c=e("Computer"),t=l(),n=l();r(o,t),r(c,n),i(t),i(n)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,