(()=>{"use strict";const e=e=>({name:e,turn:!1,ships:["Carrier","Battleship","Cruiser","Submarine","Destroyer","Destroyer"]}),t=e=>{let t=e,r=!1;return{getHealth:()=>t,getSize:()=>e,hit:()=>{t-=1},isSunk:()=>(r=t<1,r)}},r={Carrier:t(5),Battleship:t(4),Cruiser:t(3),Submarine:t(3),Destroyer:t(2)},i=100,o=()=>{const e=[];return function(t){for(let r=0;r<t;r++){const t={occupied:null,visited:!1};e.push(t)}}(i),{board:e,placeShip:(t,i)=>{const o=r[t],n=o.getSize(),l=Math.random()<.5;function s(){const e=[10,20,30,40,50,60,70,80,90,100],t=[100,101,102,103,104,105,106,107,108,109];if(!0===l){for(let t=1;t<n;t++)if(e.includes(i+t))return!1}else{let e=10;for(let r=1;r<n;r++){if(t.includes(i+e))return!1;e+=10}}return!0}if(!0===l&&!0===s()){for(let t=0;t<n;t++)e[i+t].occupied=o;return!0}if(!1===l&&!0===s()){let t=0;for(let r=0;r<n;r++)e[i+t].occupied=o,t+=10;return!0}return!1},receiveAttack:t=>{!0===e[t].visited&&console.log("Field was already used"),null!==e[t].occupied&&(console.log("Ship was striked"),e[t].occupied.hit()),e[t].visited=!0},areAllSunk:()=>{let t=!0;return e.forEach((e=>{null!==e.occupied&&!1===e.occupied.isSunk()&&(t=!1)})),t}}};function n(e){const t=document.querySelector(".gameboards"),r=document.createElement("div");r.style.display="grid",r.style.gridTemplateColumns=`repeat(${Math.sqrt(i)}, 1fr)`,e.board.forEach((e=>{const t=document.createElement("div");t.classList.add("field"),null!==e.occupied&&(t.style.backgroundColor="yellow"),r.appendChild(t)})),t.appendChild(r)}function l(e,t){const r=e.ships,o=e.ships.length;for(let e=0;e<o;e++){const o=r.pop(),n=Math.floor(Math.random()*i);!1===t.placeShip(o,n)&&(r.push(o),e-=1)}}!function(){const t=e("Player"),r=e("Computer"),i=o(),s=o();l(t,i),l(r,s),n(i),n(s)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,